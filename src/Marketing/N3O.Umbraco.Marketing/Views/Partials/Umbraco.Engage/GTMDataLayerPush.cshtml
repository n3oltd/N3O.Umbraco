@using Umbraco.Engage.Infrastructure.AppState
@using Umbraco.Engage.Infrastructure.AbTesting
@using Umbraco.Engage.Infrastructure.Analytics.Collection.Visitor
@using Umbraco.Engage.Infrastructure.Analytics.State
@using Umbraco.Cms.Web.Common.Views
@using System.Net
@inject IAnalyticsVisitorExternalIdHandler ExternalIdHandler
@inject IAbTestVisitorToVariantManager VisitorToVariantManager
@inject IAnalyticsState AnalyticsState
@inject IAppState AppState

@inherits UmbracoViewPage

@{
    if (AppState.IsEnabled == false)
    {
        return;
    }

    var content = UmbracoContext?.PublishedRequest?.PublishedContent;
    if (content == null)
    {
        return;
    }

    if (!ExternalIdHandler.TryGetExternalId(Context, out bool invalidId, out Guid externalId) || invalidId)
    {
        return;
    }

    string culture = UmbracoContext?.PublishedRequest?.Culture ?? "";

    var abTestVariants = VisitorToVariantManager.GetActiveVisitorVariants(externalId, content.Id, culture, content.ContentType.Id).ToArray();
    var abTestVariant = abTestVariants.FirstOrDefault();

    var appliedPersonalization = AnalyticsState.Pageview?.AppliedPersonalization;
    var isPersonalized = appliedPersonalization != null;
}

<script>
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
        inabtest: @(abTestVariant != null ? "true" : "false"),
        abtestname: @Html.Raw(abTestVariant != null ? "\"" + WebUtility.HtmlEncode(abTestVariant.AbTest?.Name) + "\"" : "null"),
        abtestvariant: @Html.Raw(abTestVariant != null ? "\"" + WebUtility.HtmlEncode(abTestVariant.Name) + "\"" : "null"),
        personalized: @(isPersonalized ? "true" : "false"),
        personalizationname: @Html.Raw(isPersonalized ? "\"" + WebUtility.HtmlEncode(appliedPersonalization?.Name) + "\"" : "null"),
    });
</script>
