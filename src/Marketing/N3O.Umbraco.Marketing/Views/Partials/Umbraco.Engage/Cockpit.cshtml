@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Options
@using Umbraco.Cms.Core.Web
@using Umbraco.Cms.Core.Security
@using Umbraco.Engage.Infrastructure.AppState
@using Umbraco.Engage.Infrastructure.Common
@using Umbraco.Engage.Web.Common.Umbraco
@using Umbraco.Engage.Infrastructure.Analytics.State
@using Umbraco.Engage.Web.Cockpit
@using Umbraco.Engage.Data.Analytics.Processed.Visitor

@inject IUmbracoContextAccessor UmbracoContextAccessor
@inject IUmbracoUserLoginStatus UmbracoUserLoginStatus
@inject IAnalyticsStateProvider AnalyticsStateProvider
@inject ICockpitService CockpitService
@inject IDbVisitorRepository VisitorRepository
@inject IGlobalSettingsProvider GlobalSettingsProvider
@inject IHttpContextAccessor HttpContextAccessor
@inject IBackOfficeSecurityAccessor BackOfficeSecurityAccessor
@inject IOptionsMonitor<CookieAuthenticationOptions> CookieAuthenticationOptions
@inject IAppState AppState

@{
    if (AppState.IsEnabled == false || !UmbracoUserLoginStatus.IsLoggedInToUmbraco())
    {
        return;
    }

    var publishedRequest = UmbracoContextAccessor.TryGetUmbracoContext(out var umbCtx) ? umbCtx.PublishedRequest : null;
    var analyticsState = AnalyticsStateProvider.GetState();
    var visitorId = VisitorRepository.Get(analyticsState.Pageview.Session.Visitor.ExternalId)?.Id;
}

@if (publishedRequest != null)
{
    var data = new
    {
        analyticsServer = CockpitService.GetAnalyticsServer(),
        personalizationPersonas = CockpitService.GetPersonalizationPersonas(),
        personalizationCustomerJourneys = CockpitService.GetPersonalizationCustomerJourneys(),
        personalizationSegments = CockpitService.GetPersonalizationSegments(),
        modulePermissions = CockpitService.GetModulePermissions(),
        pageData = new
        {
            pageId = publishedRequest?.PublishedContent?.Id,
            culture = publishedRequest?.Culture ?? "",
            variantInfo = CockpitService.GetVariantInfo(),
        },

        profileUrl = visitorId is long vid ? $"{GlobalSettingsProvider.GlobalSettings.UmbracoPath}/#/engage/profiles/insights?id={vid}" : "",
    };

    <script>
        window.__ENGAGE_COCKPIT_DATA = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(data));
    </script>
}

<!-- Cockpit will be mounted to this div -->
<div id="engage-cockpit"></div>

<!-- Load Cockpit font outside of main CSS bundle -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">

<!-- Load Cockpit CSS and JS -->
<link rel="stylesheet" type="text/css" href="~/assets/Umbraco.Engage/Cockpit/umbracoEngageCockpit.css">
<script src="~/assets/Umbraco.Engage/Cockpit/umbracoEngageCockpit.umd.js"></script>
